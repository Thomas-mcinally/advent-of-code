// Try all t values from 1 to max_t-1 and find the first one that works.
// distance_traveled = (max_t-t) * t
// NOTE: the graph distance_traveled vs t is symmetrical, so can use the first t that works to calculate last t that works.


// binary search to find minimum t to beat race
// while l <= r
// choose mid
// if distance_traveled > record_distance, move left (right pointer moves left)
// else: move right (left pointer moves right)
// right pointer ends up on first value before distance_traveled > record_distance
